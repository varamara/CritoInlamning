@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Routing
@using Umbraco.Cms.Core.Models.Blocks
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var site = Model.Root();
    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();

    var globalSettingsPage = Umbraco.Content(1276);
    string phone = globalSettingsPage?.Value<string>("navbarSectionPhone");
    string email = globalSettingsPage?.Value<string>("navbarSectionEmail");
    string location = globalSettingsPage?.Value<string>("navbarSectionLocation");
    string buttonUrl = globalSettingsPage?.Value<string>("navbarSectionButtonUrl");
    string buttonText = globalSettingsPage?.Value<string>("navbarSectionButtonText");
    var socialMediaLinks = globalSettingsPage?.Value<BlockListModel>("socialMediaLinksBlockList");
}

<section class="navbar-section padding bg-color">
    <nav class="navbar">
        <img class="logo" src="~/images/shared_img/main-logo.svg" alt="crito-logo" />
        <div class="contact-info">
            <ul class="address">
                <li><i class="fa-light fa-phone-volume"></i>@phone</li>
                <li><i class="fa-light fa-envelope"></i>@email</li>
                <li><i class="fa-light fa-location-dot"></i>@location</li>
            </ul>
            <ul class="socials">
                @if (socialMediaLinks != null && socialMediaLinks.Count() > 0)
                {
                    foreach (var link in socialMediaLinks)
                    {
                        var icon = link.Content.Value<string>("socialMediaIcon");
                        var url = link.Content.Value<string>("socialMediaUrl");
                <li>
                    <a href="@url" target="_blank">
                        <i class="@icon"></i>
                    </a>
                </li>
                    }
                }
            </ul>
        </div>

        <div class="nav-links">
            <ul>
                <li>
                    <a class="@(Model.Id == site.Id ? "active": null)" href="@site.Url()">@site.Name</a>
                </li>

                @if (selection?.Length > 0)
                {
                    foreach (var item in selection)
                    {
                <li><a class="@(item.IsAncestorOrSelf(Model)? "active" : null)" href="@item.Url(PublishedUrlProvider)">@item.Name</a></li>
                    }
                }
            </ul>
            <a href="@buttonUrl" class="yellow-button">@buttonText<i class="fa-solid fa-arrow-up-right"></i></a>
        </div>
    </nav>
</section>
